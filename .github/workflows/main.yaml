name: Main
on:
  push:
    branches:
      - main
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: false
env:
  DOMAIN_NAME: davydehaas.nl
  IMAGE_NAME: ghcr.io/${{ github.repository }}
  TARGET_DIR: /home/homelab/compose/personal-website
  UID: 1400
  GID: 1400

jobs:
  build:
    name: Build
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up Node
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
        with:
          node-version-file: .nvmrc
          cache: npm
      - name: Install npm dependencies
        run: npm ci
      - name: Test
        run: npm test --if-present

  deliver:
    name: Deliver
    needs: build
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3.8.0
      - name: Login to registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push to registry
        uses: docker/build-push-action@48aba3b46d1b1fec4febb7c5d0c644b249a11355 # v6.10.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.run_number }}-${{ github.run_attempt }}
  deploy:
    name: Deploy
    needs: deliver
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      - name: Copy 'compose.yaml'
        run: |
          rsync ./compose.yaml homelab@${{ secrets.SSH_HOST }}:${{ env.TARGET_DIR }}
      - name: Start container
        run: |
          ssh homelab@${{ secrets.SSH_HOST }} /bin/bash << ENDSSH
          cd ${{ env.TARGET_DIR }}

          cat << EOF > .env
          DOMAIN_NAME=${{ env.DOMAIN_NAME }}
          IMAGE_NAME=${{ env.IMAGE_NAME }}
          IMAGE_TAG=${{ github.run_number }}-${{ github.run_attempt }}
          EOF

          docker compose up -d
          
          ENDSSH
  lighthouse-check:
    name: Lighthouse check
    needs: deploy
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Create directory lighthouse-report
        run: mkdir -p ${{ github.workspace }}/tmp/lighthouse-report
      - name: Lighthouse check
        uses: foo-software/lighthouse-check-action@a80267da2e0244b8a2e457a8575fc47590615852 # v12.0.1
        id: lighthouseCheck
        with:
          outputDirectory: ${{ github.workspace }}/tmp/lighthouse-report
          urls: https://${{ env.DOMAIN_NAME }}
      - name: Upload Lighthouse check results
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5.0
        with:
          name: lighthouse-report
          path: ${{ github.workspace }}/tmp/lighthouse-report
      - name: Verify Lighthouse check results
        uses: foo-software/lighthouse-check-status-action@2b9d5101f7a0de86ddb153a0d77ad7046aac1052 # v3.0.1
        with:
          lighthouseCheckResults: ${{ steps.lighthouseCheck.outputs.lighthouseCheckResults }}
          minAccessibilityScore: "90"
          minBestPracticesScore: "50"
          minPerformanceScore: "50"
          minProgressiveWebAppScore: "50"
          minSeoScore: "50"
  zap-scan:
    name: ZAP scan
    needs: deploy
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: ZAP scan
        uses: zaproxy/action-baseline@7c4deb10e6261301961c86d65d54a516394f9aed # v0.14.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target: https://${{ env.DOMAIN_NAME }}
          rules_file_name: .zap/rules.tsv
          cmd_options: -a
  k6-load-test:
    name: k6 load test
    needs: [lighthouse-check, zap-scan]
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: k6 load test
        uses: grafana/k6-action@e4714b734f2b0afaabeb7b4a69142745548ab9ec # v0.3.1
        with:
          filename: load-test.js
          flags: --out json=results.json
      - name: Upload k6 load test results
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5.0
        with:
          name: k6-results
          path: results.json
